number # floats
string # "string"
bool ::= "true" | "false"
ident  # starts with alfabetical and continues with alfanumerical or _ TODO this is not actully correct in the code

operator ::= "+-*/%><!:".one_of.and_maybe("=") | "."



atom ::= number | string | ident | "(" atom ")" | bool

expresion ::= atom | call | binay | unary | lambda

block ::= expresion.repeated.delimited_by("(", ")")
tuple ::= expresion.separated_by(",").delimited_by("(", ")")

binay ::= expresion operator expresion
unary ::= "-!".one_of expresion
call ::= expresion tuple

expresion_or_block ::= (expresion | "{" expresion.some "}")

if ::= ("if" expresion_or_block).and_maybe("else" expresion_or_block)
while ::= "while" expresion expresion_or_block

lambda ::= tuple "=>" expresion_or_block

definition ::= expresion ":=" expresion.or(definition)

top-level-definition ::= 